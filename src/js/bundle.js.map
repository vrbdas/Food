{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE,wFAAwF;AACxF,eAAe;AACf,0EAA0E;AAC1E,2FAA2F;AAC3F,oCAAoC;AACpC,oCAAoC;AACpC,iCAAiC;AACjC;AACA,sDAAsD;AACtD;AACA;AACA,uCAAuC;AACvC;AACA,MAAM;AACN;AACA,wCAAwC;AACxC;AACA;AACA,yCAAyC;AACzC;AACA,MAAM;AACN;AACA,4CAA4C;AAC5C;AACA;AACA,+EAA+E;AAC/E;AACA,KAAK;AACL;AACA;AACA,0CAA0C;AAC1C,qEAAqE;AACrE;AACA;AACA,+EAA+E;AAC/E;AACA;AACA,KAAK;AACL;AACA;AACA,yBAAyB;AACzB;AACA,wDAAwD;AACxD,cAAc;AACd;AACA;AACA,uDAAuD;AACvD;AACA,4BAA4B;AAC5B;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,yDAAyD;AACzD,0DAA0D;AAC1D;AACA;AACA;AACA,uDAAuD;AACvD,4DAA4D;AAC5D;AACA,UAAU,OAAO;AACjB,iDAAiD;AACjD;AACA;AACA;AACA,qCAAqC;AACrC;AACA,SAAS;AACT;AACA,iDAAiD;AACjD;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,qCAAqC;AACrC,8CAA8C;AAC9C,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;ACrHA;AACA,sCAAsC;AACtC,qCAAqC;AACrC;AACA;AACA,yCAAyC,IAAI,YAAY,cAAc,IAAI;AAC3E;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC,OAAO;AAC3D;AACA;AACA;AACA,mBAAmB,KAAK,MAAM,OAAO;AACrC,0CAA0C,MAAM;AAChD,wCAAwC,MAAM;AAC9C;AACA;AACA;AACA,8CAA8C,MAAM;AACpD,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;ACjCA;AACA;AACA,yCAAyC;AACzC,sCAAsC;AACtC;AACA,gBAAgB,mCAAmC;AACnD;AACA,KAAK;AACL;AACA,gCAAgC;AAChC;AACA;AACA,4BAA4B;AAC5B;AACA,GAAG;AACH;AACA;AACA,iDAAiD;AACjD;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,6BAA6B;AAC7B;AACA,4BAA4B;AAC5B,SAAS;AACT,uBAAuB;AACvB;AACA,SAAS;AACT,yBAAyB;AACzB,wBAAwB;AACxB,SAAS;AACT,KAAK;AACL;AACA;AACA,mCAAmC;AACnC;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,kCAAkC,KAAK;AACvC;AACA;AACA,qCAAqC;AACrC,uBAAuB;AACvB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;ACxEA;AACA;AACA,kDAAkD;AAClD;AACA,yDAAyD;AACzD;AACA,mCAAmC;AACnC;AACA,GAAG;AACH;AACA,2DAA2D;AAC3D;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,GAAG;AACH;AACA,oDAAoD;AACpD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iCAAiC;AACjC,oCAAoC;AACpC,6CAA6C;AAC7C,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,2BAA2B;AAC3B,mEAAmE;AACnE,6EAA6E;AAC7E,yCAAyC;AACzC,sBAAsB;AACtB,qBAAqB;AACrB,kBAAkB;AAClB,YAAY;AACZ,sBAAsB;AACtB,uBAAuB;AACvB;AACA,0BAA0B;AAC1B,sBAAsB;AACtB,uBAAuB;AACvB;AACA,0BAA0B;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,oCAAoC;AACpC,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mCAAmC,KAAK;AACnE,gDAAgD;AAChD,sBAAsB;AACtB,iBAAiB;AACjB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,KAAK,sBAAsB;AAC3B;AACA;AACA,8BAA8B;AAC9B,+CAA+C;AAC/C,6EAA6E;AAC7E,oEAAoE;AACpE;AACA;AACA,yBAAyB;AACzB,0CAA0C,2BAA2B,MAAM;AAC3E;AACA;AACA;AACA,oCAAoC,WAAW,IAAI;AACnD;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA,oBAAoB;AACpB;AACA,sCAAsC;AACtC,sBAAsB;AACtB,4CAA4C,oCAAoC,MAAM;AACtF,sDAAsD;AACtD,yCAAyC;AACzC,8CAA8C,2BAA2B,MAAM;AAC/E,OAAO;AACP,MAAM;AACN,mBAAmB;AACnB,yBAAyB;AACzB;AACA,sBAAsB;AACtB,kBAAkB;AAClB;AACA;AACA;AACA,oBAAoB;AACpB;AACA,0BAA0B;AAC1B,kCAAkC;AAClC,4CAA4C,EAAE,MAAM;AACpD,sDAAsD;AACtD,yCAAyC;AACzC,8CAA8C,2BAA2B,MAAM;AAC/E,OAAO;AACP,MAAM;AACN,mBAAmB;AACnB,yBAAyB;AACzB;AACA,sBAAsB;AACtB,kBAAkB;AAClB;AACA;AACA,gCAAgC;AAChC;AACA,+BAA+B;AAC/B,4EAA4E;AAC5E;AACA,UAAU;AACV;AACA,UAAU,uEAAuE;AACjF,0BAA0B;AAC1B;AACA,yCAAyC;AACzC;AACA,gCAAgC;AAChC,2BAA2B;AAC3B,iCAAiC;AACjC;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC;AACjC,qDAAqD;AACrD;AACA,8BAA8B;AAC9B,+BAA+B;AAC/B,oCAAoC;AACpC,kEAAkE;AAClE;AACA,yDAAyD;AACzD,oDAAoD;AACpD,qDAAqD;AACrD;AACA,KAAK;AACL;AACA;AACA;AACA,4CAA4C;AAC5C,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,0CAA0C,6BAA6B;AACvE;AACA;AACA;AACA,kEAAkE;AAClE;AACA,yCAAyC;AACzC;AACA,MAAM,gDAAgD;AACtD;AACA,MAAM,iDAAiD;AACvD;AACA,MAAM,OAAO;AACb,sCAAsC,WAAW,IAAI;AACrD,4CAA4C,WAAW;AACvD,sFAAsF;AACtF,oBAAoB;AACpB;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzLA;AACA,qEAAqE;AACrE,0EAA0E;AAC1E,wEAAwE;AACxE;AACA,oBAAoB;AACpB,oBAAoB;AACpB;AACA,4DAA4D;AAC5D,oEAAoE;AACpE,4CAA4C;AAC5C;AACA;AACA,6BAA6B;AAC7B;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,8BAA8B;AAC9B;AACA,kCAAkC;AAClC;AACA,KAAK;AACL;AACA,uDAAuD;AACvD,KAAK;AACL;AACA;AACA,mCAAmC;AACnC,uDAAuD;AACvD;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;;;;;;;;;;ACpCA;AACA,gBAAgB;AAChB;AACA,mBAAmB;AACnB,gCAAgC;AAChC;AACA,6BAA6B;AAC7B;AACA;AACA,mDAAmD;AACnD,MAAM,OAAO;AACb,6EAA6E;AAC7E,iHAAiH;AACjH,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA,+EAA+E,kBAAkB,UAAU;AAC3G;AACA;AACA,uCAAuC;AACvC,4DAA4D;AAC5D,wDAAwD;AACxD,2DAA2D;AAC3D,wDAAwD;AACxD,iDAAiD;AACjD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,sDAAsD;AACtD,+CAA+C;AAC/C,iDAAiD;AACjD,qDAAqD;AACrD,qDAAqD;AACrD;AACA,yDAAyD;AACzD;AACA,mBAAmB;AACnB;AACA,6BAA6B;AAC7B,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;;;;;;UCzEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb;AACA;AACA;AACA,eAAe,mBAAO,CAAC,gDAAgB,GAAG;AAC1C,gBAAgB,mBAAO,CAAC,kDAAiB,GAAG;AAC5C,gBAAgB,mBAAO,CAAC,kDAAiB,GAAG;AAC5C,gBAAgB,mBAAO,CAAC,kDAAiB,GAAG;AAC5C,gBAAgB,mBAAO,CAAC,kDAAiB,GAAG;AAC5C,iBAAiB,mBAAO,CAAC,oDAAkB,GAAG;AAC9C,eAAe,mBAAO,CAAC,gDAAgB,GAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://gulp/./src/js/modules/calc.js","webpack://gulp/./src/js/modules/cards.js","webpack://gulp/./src/js/modules/forms.js","webpack://gulp/./src/js/modules/modal.js","webpack://gulp/./src/js/modules/slider.js","webpack://gulp/./src/js/modules/tabs.js","webpack://gulp/./src/js/modules/timer.js","webpack://gulp/webpack/bootstrap","webpack://gulp/./src/js/script.js"],"sourcesContent":["function calc() {\r\n  const result = document.querySelector('.calculating__result span'); // ваша суточная норма калорий:\r\n\r\n  let sex;\r\n  let height;\r\n  let weight;\r\n  let age;\r\n  let ratio;\r\n\r\n  initLocalSettings('#gender div', 'calculating__choose-item_active'); // устанавливает значения и классы активности в соответствии с localStorage\r\n  initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active'); // устанавливает значения и классы активности в соответствии с localStorage\r\n  calcTotal(); // вычисляет калории и показывает результат, первый вызов, чтобы сразу скрыть блок с результатом\r\n  getStaticInformation('#gender div', 'calculating__choose-item_active'); // получает значения пол\r\n  getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active'); // получает значения физическая активность\r\n  getDynamicInformation('#height'); // получает значения ваша конституция\r\n  getDynamicInformation('#weight'); // получает значения ваша конституция\r\n  getDynamicInformation('#age'); // получает значения ваша конституция\r\n\r\n  function initLocalSettings(selector, activeClass) { // устанавливает значения и классы активности в соответствии с localStorage\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    if (localStorage.getItem('sex')) { // если в localStorage есть значение, устанавливает его\r\n      sex = localStorage.getItem('sex');\r\n    } else {\r\n      sex = 'female';\r\n      localStorage.setItem('sex', sex); // если в localStorage нет значения, то устанавливает по умолчанию\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) { // если в localStorage есть значение, устанавливает его\r\n      ratio = localStorage.getItem('ratio');\r\n    } else {\r\n      ratio = 1.375;\r\n      localStorage.setItem('ratio', ratio); // если в localStorage нет значения, то устанавливает по умолчанию\r\n    }\r\n\r\n    document.querySelectorAll('.calculating__choose-item').forEach((item) => { // очищает все поля ввода\r\n      item.value = '';\r\n    });\r\n\r\n    elements.forEach((elem) => {\r\n      elem.classList.remove(activeClass); // убирает класс активности у всех блоков\r\n      if (elem.getAttribute('id') === localStorage.getItem('sex')) { // устанавливает классы активности на блоки со значениями как в localStorage\r\n        elem.classList.add(activeClass);\r\n      }\r\n      if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) { // устанавливает классы активности на блоки со значениями как в localStorage\r\n        elem.classList.add(activeClass);\r\n      }\r\n    });\r\n  }\r\n\r\n  function calcTotal() { // вычисляет калории и показывает результат\r\n    if (!sex || !height || !weight || !age || !ratio) {\r\n      result.parentElement.style.visibility = 'hidden'; // если не все поля заполнены, скрывает блок c результатом\r\n      return; // прерывает выполнение функции\r\n    }\r\n\r\n    result.parentElement.style.visibility = 'visible'; // показывает блок c результатом\r\n\r\n    if (sex === 'female') { // https://fitseven.ru/zdorovie/metabolism/sutochnaya-norma-kaloriy\r\n      result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n    } else {\r\n      result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n    }\r\n  }\r\n\r\n  function getStaticInformation(selector, activeClass) { // получает значения пол и физическая активность\r\n    const elements = document.querySelectorAll(selector); // получает все блоки внутри parentSelector\r\n\r\n    elements.forEach((item) => {\r\n      item.addEventListener('click', (event) => {\r\n        if (event.target.getAttribute('data-ratio')) { // если у объекта события есть аттрибут data-ratio=\"...\"\r\n          ratio = +event.target.getAttribute('data-ratio'); // берет его значение\r\n          localStorage.setItem('ratio', ratio);\r\n        } else { // если нет аттрибута\r\n          sex = event.target.getAttribute('id'); // берет значение из id\r\n          localStorage.setItem('sex', sex);\r\n        }\r\n\r\n        elements.forEach((elem) => { // убирает класс активности у всех блоков\r\n          elem.classList.remove(activeClass);\r\n        });\r\n\r\n        event.target.classList.add(activeClass); // добавляет класс активности выбранному блоку\r\n\r\n        calcTotal();\r\n      });\r\n    });\r\n  }\r\n\r\n  function getDynamicInformation(selector) { // получает значения ваша конституция\r\n    const input = document.querySelector(selector);\r\n\r\n    input.addEventListener('input', () => {\r\n\r\n      if (input.value.match(/\\D/)) { // если введенное значение не число\r\n        input.style.border = '1px solid red'; // добавляет рамку\r\n      } else {\r\n        input.style.border = 'none';\r\n      }\r\n\r\n      switch (input.getAttribute('id')) {\r\n        case 'height':\r\n          height = +input.value;\r\n          break;\r\n        case 'weight':\r\n          weight = +input.value;\r\n          break;\r\n        case 'age':\r\n          age = +input.value;\r\n          break;\r\n      }\r\n\r\n      calcTotal();\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n  const getResource = async(url) => { // Настраивает и посылает запрос на сервер\r\n    const result = await fetch(url); // Fetch возвращает promise\r\n\r\n    if (!result.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${result.status}`); // Создает объект ошибки и выбрасывает его как исключение\r\n    }\r\n\r\n    return await result.json(); // Promise в формате JSON\r\n  };\r\n\r\n  getResource('http://localhost:3000/menu')\r\n    .then((data) => createCard(data));\r\n\r\n  function createCard(data) {\r\n    data.forEach(({img, altimg, title, descr, price}) => { // Для каждого объекта из массива menu разбивает его на значения и они присваиваются переменным с таким же именем\r\n      const element = document.createElement('div');\r\n      element.classList.add('menu__item');\r\n      element.innerHTML = `\r\n        <img src=${img} alt=${altimg}>\r\n        <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n        <div class=\"menu__item-descr\">${descr}</div>\r\n        <div class=\"menu__item-divider\"></div>\r\n        <div class=\"menu__item-price\">\r\n        <div class=\"menu__item-cost\">Цена:</div>\r\n        <div class=\"menu__item-total\"><span>${price}</span> руб/день</div>\r\n        `; // Можно не ставить кавычки для src и alt, html сам их подставит, но не должно быть пробелов\r\n\r\n      document.querySelector('.menu .container').append(element);\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n  const forms = document.querySelectorAll('form');\r\n  const postData = async(url, data) => { // Настраивает и посылает запрос на сервер\r\n    const result = await fetch(url, { // await дождется результата функции fetch\r\n      method: 'POST', // POST это отправка, GET получение\r\n      headers: {'Content-type': 'application/json'}, // Заголовки нужны для JSON, если на сервер отправлять formData, то не нужны\r\n      body: data, // Тело запроса, если запрос GET, то не нужно\r\n    });\r\n\r\n    return await result.json(); // Ответ от сервера в виде PROMISE в формате JSON\r\n  };\r\n\r\n  forms.forEach((item) => { // На каждую форму вешает обработчик формы\r\n    bindPostData(item);\r\n  });\r\n\r\n  function bindPostData(form) {\r\n    form.addEventListener('submit', (event) => { // Событие отправка формы кликом на кнопку или enter\r\n      event.preventDefault();\r\n\r\n      const spinner = document.createElement('img'); // К форме добавляется спиннер загрузки\r\n      spinner.setAttribute('src', 'img/form/spinner.svg');\r\n      spinner.style.cssText = `\r\n        display: block;\r\n        margin: 0 auto;\r\n      `;\r\n      form.insertAdjacentElement('afterend', spinner); // При загрузке показывает спиннер после формы\r\n\r\n      const formData = new FormData(form); // Данные из формы, во всех input обязательно должны быть аттрибуты name=\"\"\r\n\r\n      const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n      // Данные из формы превращает в массив массивов, его в обычный объект, а его в JSON\r\n\r\n      postData('http://localhost:3000/requests', json)\r\n        .then((data) => { // Обработка успешного promise\r\n          console.log(data); // Ответ от сервера\r\n          showThanksModal('Спасибо! Скоро мы с вами свяжемся');\r\n          spinner.remove(); // Удаляет спиннер загрузки\r\n        })\r\n        .catch(() => { // Обработка reject (ошибки)\r\n          showThanksModal('Что-то пошло не так...');\r\n        })\r\n        .finally(() => { // Выполнится в любом случае\r\n          form.reset(); // Очистка формы\r\n        });\r\n    });\r\n  }\r\n\r\n  function showThanksModal(text) { // Меняет модальное окно на сообщение об отправке\r\n    const formModalDialog = document.querySelector('.modal__dialog');\r\n\r\n    formModalDialog.classList.add('hide'); // Скрывает внутреннюю часть старого окна\r\n    modalShow();\r\n\r\n    const thanksModalDialog = document.createElement('div');\r\n    thanksModalDialog.classList.add('modal__dialog');\r\n    thanksModalDialog.innerHTML = `\r\n    <div class=\"modal__content\">\r\n      <div data-close class=\"modal__close\">&times;</div>\r\n      <div class=\"modal__title\">${text}</div>\r\n    </div>\r\n    `;\r\n    modal.append(thanksModalDialog); // Вставляет новую внутреннюю часть\r\n    setTimeout(() => { // Через 4с скрывает окно и возвращает внутреннюю часть с формой\r\n      thanksModalDialog.remove();\r\n      formModalDialog.classList.remove('hide');\r\n      formModalDialog.classList.add('show');\r\n      modalHide();\r\n    }, 4000);\r\n  }\r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n  const modalTrigger = document.querySelectorAll('[data-modal]');\r\n  const modal = document.querySelector('.modal'); // Изначально стоит класс .hide\r\n\r\n  // const modalTimerId = setTimeout(modalShow, 900000); // Автоматически открывает модальное окно по таймеру через 15 минут\r\n\r\n  modalTrigger.forEach((item) => { // Показавает окно при клике на кнопки 'Связаться с нами'\r\n    item.addEventListener('click', modalShow);\r\n  });\r\n\r\n  // window.addEventListener('scroll', showModalByScroll); // Показывает окно при прокрутке страницы до самого конца\r\n\r\n  modal.addEventListener('click', (event) => { // Закрывает окно при клике на область вокруг .modal__dialog или на крестик\r\n    if (event.target === modal || event.target.matches('[data-close]')) {\r\n      modalHide();\r\n    }\r\n  });\r\n\r\n  document.addEventListener('keydown', (event) => { // Закрывает окно при нажатии Esc\r\n    if (event.code === 'Escape' && modal.classList.contains('show')) {\r\n      modalHide();\r\n    }\r\n  });\r\n\r\n  function modalShow() {\r\n    modal.classList.add('show'); // display: block;\r\n    modal.classList.remove('hide'); // display: none;\r\n    document.body.style.overflow = 'hidden'; // Предотвращает прокрутку страницы, когда открыто модальное окно\r\n    clearInterval(modalTimerId); // Предотвращает открытие окна по таймеру, если уже открывали вручную\r\n  }\r\n\r\n  function modalHide() {\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = ''; // Возвращает прокрутку страницы, когда закрыто модальное окно\r\n  }\r\n\r\n  function showModalByScroll() {\r\n    if (document.documentElement.scrollTop + 1 + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n      // Сколько прокручено до видимого экрана + Высота видимого экрана = Высота всего элемента без прокрутки. document.documentElement это <html></html>\r\n      modalShow();\r\n      window.removeEventListener('scroll', showModalByScroll);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n  const sliderBlock = document.querySelector('.offer__slider');\r\n  const current = document.querySelector('#current');\r\n  const total = document.querySelector('#total');\r\n  const inner = document.querySelector('.offer__slider-inner');\r\n  const wrapper = document.querySelector('.offer__slider-wrapper');\r\n  const slides = document.querySelectorAll('.offer__slide'); // клоны сюда не попадут, это статический nodelist\r\n  const transition = 0.75; // время плавного перехода между слайдами в секундах\r\n  const nav = document.querySelector('.offer__slider-navigation'); // блок с точками\r\n  const wrapperWidth = parseInt(window.getComputedStyle(wrapper).width, 10); // parseInt отбрасывает 'px'\r\n  const threshold = wrapperWidth * 0.33; // порог, после которого переключается слайд = треть от ширины одного слайда\r\n  let mouseStart = 0; // начальное положение мыши\r\n  let mouseMove = 0; // смещение мыши\r\n  let initialPos; // позиция слайдера перед началом перетаскивания\r\n  let dots; // точки\r\n  let slideIndex = 1; // начальные значения\r\n  let canSlide = true; // начальные значения\r\n\r\n  sliderInitialization(); // создание элементов слайдера и задание начального положения\r\n  sliderBtnsClicks(); // клик на кнопки и точки\r\n  sliderDragActions(); // перетаскивание для слайдера\r\n\r\n  function getZero(num) { // Если число из одной цифры, добавляет перед ним 0\r\n    if (num >= 0 && num < 10) {\r\n      return `0${num}`;\r\n    }\r\n    return num;\r\n  }\r\n\r\n  function sliderInitialization() { // создание элементов слайдера и задание начального положения\r\n    const firstSlideClone = document.createElement('div'); // создает клон первого слайда и помещает его в конец\r\n    firstSlideClone.classList.add('offer__slide');\r\n    firstSlideClone.innerHTML = slides[0].innerHTML;\r\n    inner.append(firstSlideClone);\r\n\r\n    const lastSlideClone = document.createElement('div'); // создает клон последнего слайда и помещает его в начало\r\n    lastSlideClone.classList.add('offer__slide');\r\n    lastSlideClone.innerHTML = slides[slides.length - 1].innerHTML;\r\n    inner.prepend(lastSlideClone);\r\n\r\n    for (let i = 0; i < slides.length; i += 1) { // создает точки по количеству слайдов\r\n      const dot = document.createElement('div');\r\n      dot.classList.add('offer__slider-dot');\r\n      nav.append(dot);\r\n      dots = document.querySelectorAll('.offer__slider-dot');\r\n    }\r\n\r\n    inner.style.width = `${wrapperWidth * (slides.length + 2)}px`; // устанавливает ширину ленты со слайдами, +2 это два клона, которых нет в slides\r\n    total.textContent = getZero(slides.length); // показывает общее число слайдов (клоны слайдов не считаются)\r\n    currentAndDots(); // показывает номер слайда и делает активной точку\r\n    showSlide(); // показывает слайд по индексу\r\n  }\r\n\r\n  function clickDelay() { // следующий клик можно сделать только через указанное время\r\n    canSlide = false;\r\n    setTimeout(() => {\r\n      canSlide = true;\r\n    }, transition * 1000); // сек переводятся в мс\r\n  }\r\n\r\n  function currentAndDots() { // показывает номер слайда и делает активной точку\r\n    current.textContent = getZero(slideIndex); // getZero добавляет ноль, если число из 1 цифры\r\n    dots.forEach((dot) => dot.classList.remove('offer__slider-dot-active')); // удаляет класс активности со всех точек\r\n    dots[slideIndex - 1].classList.add('offer__slider-dot-active'); // показывает точку по индексу\r\n  }\r\n\r\n  function showSlide() { // показывает слайд по индексу\r\n    inner.style.transform = `translateX(${-wrapperWidth * slideIndex}px)`; // показывает слайд\r\n  }\r\n\r\n  function addAnimation() {\r\n    inner.style.transition = `all ${transition}s`; // добавляет анимацию плавного перелистывания\r\n  }\r\n\r\n  function removeAnimation() {\r\n    inner.addEventListener('transitionend', () => inner.style.transition = 'none'); // ждет окончания анимации и убирает анимацию;\r\n  }\r\n\r\n  function nextSlide() {\r\n    addAnimation(); // добавляет анимацию плавного перелистывания\r\n    slideIndex += 1;\r\n    if (slideIndex > slides.length) { // долистал до последнего слайда\r\n      slideIndex = 1; // счетчик на первый слайд\r\n      inner.style.transform = `translateX(${-wrapperWidth * (slides.length + 1)}px)`; // показывает клон 1го\r\n      inner.addEventListener('transitionend', () => { // ждет окончания анимации\r\n        inner.style.transition = 'none'; // убирает анимацию, чтобы незаметно перейти на первый слайд\r\n        inner.style.transform = `translateX(${-wrapperWidth * slideIndex}px)`; // переходит на первый слайд\r\n      });\r\n    } else {\r\n      showSlide(); // показывает слайд по индексу\r\n      removeAnimation(); // ждет окончания анимации и убирает анимацию;\r\n    }\r\n    currentAndDots(); // показывает номер слайда и делает активной точку\r\n    clickDelay(); // добавляет задержку 1с\r\n  }\r\n\r\n  function prevSlide() {\r\n    addAnimation(); // добавляет анимацию плавного перелистывания\r\n    slideIndex -= 1;\r\n    if (slideIndex < 1) { // долистал до 1 слайда\r\n      slideIndex = slides.length; // счетчик на последний слайд\r\n      inner.style.transform = `translateX(${0}px)`; // показывает клон последнего слайда\r\n      inner.addEventListener('transitionend', () => { // ждет окончания анимации\r\n        inner.style.transition = 'none'; // убирает анимацию, чтобы незаметно перейти на последний слайд\r\n        inner.style.transform = `translateX(${-wrapperWidth * slideIndex}px)`; // переходит на последний слайд\r\n      });\r\n    } else {\r\n      showSlide(); // показывает слайд по индексу\r\n      removeAnimation(); // ждет окончания анимации и убирает анимацию;\r\n    }\r\n    currentAndDots(); // показывает номер слайда и делает активной точку\r\n    clickDelay(); // добавляет задержку 1с\r\n  }\r\n\r\n  function sliderBtnsClicks() { // клик на кнопки и точки\r\n    sliderBlock.addEventListener('click', (event) => {\r\n      if (canSlide === true) { // не запускает обработчик, пока не прошла задержка\r\n        if (event.target && event.target.matches('[data-action=\"next\"]')) { // data-аттрибуты добавить блоку с кнопкой и самой картинке со стрелкой\r\n          nextSlide();\r\n        } else if (event.target && event.target.matches('[data-action=\"prev\"]')) {\r\n          prevSlide();\r\n        } else if (event.target && event.target.matches('.offer__slider-dot')) { // клик на точки\r\n          addAnimation(); // добавляет анимацию плавного перелистывания\r\n          dots.forEach((item, i) => {\r\n            if (item === event.target) { // находит точку, на которую нажали\r\n              slideIndex = i + 1;\r\n              currentAndDots(); // показывает номер слайда и делает активной точку\r\n              showSlide(); // показывает слайд по индексу\r\n              removeAnimation(); // ждет окончания анимации и убирает анимацию;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function sliderDragActions() { // перетаскивание для слайдера\r\n    inner.addEventListener('mousedown', (event) => { // нажатие мыши\r\n      // проверить, что у элемента нет css свойства transition, c ним всё глючит. в моем слайдере оно добавляется когда надо и сразу удаляется\r\n      event.preventDefault(); // удаляет встроенное в браузер перетаскивание картинки\r\n      if (canSlide === true) { // не запускает обработчик, пока не прошла задержка\r\n        mouseStart = event.clientX; // положение мыши при нажатии\r\n        initialPos = +inner.style.transform.match(/[-0-9.]+/)[0]; // translateX перед началом перетаскивания\r\n\r\n        inner.addEventListener('mousemove', dragAction); // движение мыши\r\n        inner.addEventListener('mouseup', dragEnd); // отпускание мыши\r\n        inner.addEventListener('mouseout', dragEnd); // отменяет перетаскивание, если курсор вышел за пределы слайда\r\n      }\r\n    });\r\n  }\r\n\r\n  function dragAction(event) {\r\n    mouseMove = mouseStart - event.clientX; // после события onmousemove смещение курсора от начального положения на 1px влево или вправо\r\n    mouseStart = event.clientX; // сразу возвращает начальное положение к месту, где находится мышь\r\n\r\n    const currentTransform = +inner.style.transform.match(/[-0-9.]+/)[0];\r\n    // текущее значение translateX, рег.выражение отбрасывает текст \"translateX:\" и оставляет только минус, цифры и точки,\r\n    // + значит каждый символ из скобок может повторяться 1 или более раз. остается массив с числом, берем 0й элемент\r\n\r\n    inner.style.transform = `translateX(${currentTransform - mouseMove}px)`;\r\n  }\r\n\r\n  function dragEnd() {\r\n    const finalPos = +inner.style.transform.match(/[-0-9.]+/)[0]; // translateX в конце перетаскивания\r\n\r\n    if (-finalPos - -initialPos === 0) { // если не сдвигали слайдер, просто кликнули\r\n      inner.style.transition = 'none';\r\n    } else if (-finalPos - -initialPos > threshold) { // если смещение больше порога и положительное, переключает на следующий слайд\r\n      nextSlide();\r\n    } else if (-finalPos - -initialPos < -threshold) { // если смещение больше порога и отрицательное, переключает на предыдущий слайд\r\n      prevSlide();\r\n    } else { // если смещение меньше порога, возвращает к тому положению, где была зажата ЛКМ\r\n      inner.style.transition = `all ${transition}s`; // добавляет анимацию плавного перелистывания\r\n      inner.style.transform = `translateX(${initialPos}px)`;\r\n      inner.addEventListener('transitionend', () => inner.style.transition = 'none'); // ждет окончания анимации и убирает анимацию;\r\n      clickDelay(); // добавляет задержку\r\n    }\r\n\r\n    inner.removeEventListener('mousemove', dragAction); // удаляет все обработчики событий\r\n    inner.removeEventListener('mouseup', dragEnd);\r\n    inner.removeEventListener('mouseout', dragEnd);\r\n  }\r\n}\r\n\r\nmodule.exports = slider;\r\n\r\n","function tabs() {\r\n  const tabContentBlocks = document.querySelectorAll('.tabcontent'); // Блоки с картинкой\r\n  const tabHeaderContainer = document.querySelector('.tabheader__items'); // Контейнер с вкладками\r\n  const tabHeaderItems = document.querySelectorAll('.tabheader__item'); // Вкладки\r\n\r\n  hideTabContent(); // Скрывает все вкладки\r\n  showTabContent(); // Показывает первую вкладку по умолчанию (i = 0 в функции showTabContent)\r\n\r\n  tabHeaderContainer.addEventListener('click', (event) => { // Обрабатывает клик на контейнер с вкладками\r\n    if (event.target && event.target.matches('.tabheader__item')) { // Проверяет клик на вкладку\r\n      tabHeaderItems.forEach((item, i) => { // Определяет номер вкладки\r\n        if (item === event.target) {\r\n          hideTabContent();\r\n          showTabContent(i); // Показывает нужную вкладку\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  function hideTabContent() { // Скрывает все вкладки\r\n    tabContentBlocks.forEach((item) => {\r\n      item.classList.add('hide'); // display: none;\r\n      item.classList.remove('show', 'fade');\r\n    });\r\n    tabHeaderItems.forEach((item) => {\r\n      item.classList.remove('tabheader__item_active'); // Делает все вкладки неактивными\r\n    });\r\n  }\r\n\r\n  function showTabContent(i = 0) { // Показывает выбранный блок с картинкой\r\n    tabContentBlocks[i].classList.add('show', 'fade'); // display: block;\r\n    tabContentBlocks[i].classList.remove('hide');\r\n    tabHeaderItems[i].classList.add('tabheader__item_active'); // Активирует выбранную вкладку\r\n  }\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n  let deadline; // дата окончания акции\r\n\r\n  promotionTime(); // устанавливает время окончания акции\r\n  setClock('.timer', deadline); // устанавливает таймер\r\n\r\n  function promotionTime() { // устанавливает время окончания акции\r\n    if (localStorage.getItem('deadline') && Date.parse(localStorage.getItem('deadline')) > Date.parse(new Date())) {\r\n      // если в локальном хранилище есть дата окончания акции, и она позже сегодняшней\r\n      deadline = localStorage.getItem('deadline'); // использует эту дату\r\n    } else { // если в локальном хранилище нет даты окончания акции или она просрочена\r\n      const deadlineCalc = new Date(Date.now() + (1 * 24 * 60 * 60 * 1000)); // текущая дата в текущем часовом поясе + 1д\r\n      deadline = new Date(deadlineCalc.getFullYear(), deadlineCalc.getMonth(), deadlineCalc.getDate(), 0, 0, 0); // обнуляет часы минуты и сек в deadlineCalc\r\n      localStorage.setItem('deadline', deadline); // записывает получившуюся дату в локальное хранилище\r\n    }\r\n\r\n    const promotionEndText = new Date(deadline).toLocaleString('ru', {\r\n      day: '2-digit',\r\n      month: 'long',\r\n    }); // выводит дату в виде 2 цифр и месяц в виде слова, склоняя на русском языке\r\n\r\n    document.querySelector('#promotion-end').textContent = `Акция закончится ${promotionEndText} в 00:00`; // добавляет текст на страницу\r\n  }\r\n\r\n  function getTimeRemaining(endtime) { // Вычисляет оставшееся время от текущей даты до endtime\r\n    const t = Date.parse(endtime) - Date.parse(new Date()); // Вычитает текущую дату из конечной в мс\r\n    const days = Math.floor(t / (1000 * 60 * 60 * 24)); // мс в дни\r\n    const hours = Math.floor((t / (1000 * 60 * 60)) % 24); // мс в часы как остаток от деления на 24\r\n    const minutes = Math.floor((t / (1000 * 60)) % 60); // мс в минуты как остаток от деления на 60\r\n    const seconds = Math.floor((t / 1000) % 60); // мс в секунды как остаток от деления на 60\r\n\r\n    return { // Возвращает оставшееся время как объект\r\n      total: t,\r\n      days: days,\r\n      hours: hours,\r\n      minutes: minutes,\r\n      seconds: seconds,\r\n    };\r\n  }\r\n\r\n  function getZero(num) { // Если число из одной цифры, добавляет перед ним 0\r\n    if (num >= 0 && num < 10) {\r\n      return `0${num}`;\r\n    }\r\n    return num;\r\n  }\r\n\r\n  function setClock(timerBlock, endtime) { // устанавливает таймер\r\n    const timer = document.querySelector(timerBlock); // Контейнер с блоками таймера\r\n    const days = timer.querySelector('#days'); // Блок с днями\r\n    const hours = timer.querySelector('#hours'); // Блок с часами\r\n    const minutes = timer.querySelector('#minutes'); // Блок с минутами\r\n    const seconds = timer.querySelector('#seconds'); // Блок с секундами\r\n\r\n    const timeInterval = setInterval(updateClock, 1000); // Обновление таймера будет запускаться каждую секунду\r\n\r\n    updateClock(); // Запускает функцию сразу, чтобы не ждать 1с до первого обновления\r\n\r\n    function updateClock() { // Обновление таймера\r\n      const t = getTimeRemaining(endtime); // Создает объект с оставшимся временем\r\n\r\n      days.textContent = getZero(t.days);\r\n      hours.textContent = getZero(t.hours);\r\n      minutes.textContent = getZero(t.minutes);\r\n      seconds.textContent = getZero(t.seconds);\r\n\r\n      if (t.total <= 0) {\r\n        clearInterval(timeInterval); // Останавливает обновление таймера, когда там будет 0\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n  const tabs = require('./modules/tabs'); // Вкладки\r\n  const timer = require('./modules/timer'); // Таймер\r\n  const modal = require('./modules/modal'); // Модальное окно\r\n  const cards = require('./modules/cards'); // Создание карточек меню\r\n  const forms = require('./modules/forms'); // Формы\r\n  const slider = require('./modules/slider'); // Самодельный слайдер\r\n  const calc = require('./modules/calc'); // Калькулятор\r\n\r\n  tabs();\r\n  timer();\r\n  modal();\r\n  cards();\r\n  forms();\r\n  slider();\r\n  calc();\r\n\r\n});"],"names":[],"sourceRoot":""}